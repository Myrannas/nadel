import java.text.SimpleDateFormat

plugins {
    id "com.jfrog.bintray" version "1.2"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'antlr'
apply plugin: 'osgi'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def slf4jVersion = '1.7.25'
def releaseVersion = System.properties.RELEASE_VERSION
version = releaseVersion ? releaseVersion : new SimpleDateFormat('yyyy-MM-dd\'T\'HH-mm-ss').format(new Date())
group = 'com.graphql-java'

repositories {
    mavenCentral()
    maven { url  "http://dl.bintray.com/andimarek/graphql-java" }
    mavenLocal()
}

apply plugin: 'groovy'

jar {
    from "LICENSE.md"
}

dependencies {
    compile 'com.graphql-java:graphql-java:2018-02-12T07-54-58'
    compile 'org.antlr:antlr4-runtime:4.5.1'
    compile 'org.slf4j:slf4j-api:' + slf4jVersion
    antlr "org.antlr:antlr4:4.5.1"
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.10'
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile 'org.objenesis:objenesis:2.1'
    testCompile 'com.google.code.gson:gson:2.8.0'
    testCompile 'org.slf4j:slf4j-simple:' + slf4jVersion
}

compileJava.source file("build/generated-src"), sourceSets.main.java

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ["-visitor"]
    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/graphql/nadel/parser/antlr")
}

task sourcesJar(type: Jar) {
    dependsOn classes
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options.encoding = 'UTF-8'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

allprojects {
    tasks.withType(Javadoc) {
        exclude('**/antlr/**')
    }


}

publishing {

    publications {

        nadel(MavenPublication) {
            version version
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            pom.withXml {
                // The ANTLR-related code below--introdcued in `1ac98bf`--addresses an issue with
                // the Gradle ANTLR plugin. `1ac98bf` can be reverted and this comment removed once
                // that issue is fixed and Gradle upgraded. See https://goo.gl/L92KiF and https://goo.gl/FY0PVR.
                Node pomNode = asNode()
                pomNode.dependencies.'*'.findAll() {
                    it.artifactId.text() == 'antlr4'
                }.each() {
                    it.parent().remove(it)
                }
                pomNode.children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'graphql-java'
                    description 'GraphqL Stitching DSL'
                    url "https://github.com/andimarek/nadel"
                    scm {
                        url "https://github.com/andimarek/nadel"
                        connection "https://github.com/andimarek/nadel"
                        developerConnection "https://github.com/andimarek/nadel"
                    }
                    licenses {
                        license {
                            name 'MIT'
                            url 'https://github.com/andimarek/nadel/blob/master/LICENSE.md'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'andimarek'
                            name 'Andreas Marek'
                        }
                    }
                }
            }
        }
    }
}


bintray {
    user = System.env.BINTRAY_USER ?: project["bintray.user"]
    key = System.env.BINTRAY_API_KEY ?: project["bintray.key"]
    publications = ['nadel']
    publish = true
    pkg {
        repo = 'nadel'
        name = 'nadel'
        desc = 'GraphQL stitching dsl'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/andimarek/nadel'
    }
}

// all publish tasks depend on the build task
tasks.withType(PublishToMavenRepository) {
    dependsOn build
}


task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
    distributionUrl = "https://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

